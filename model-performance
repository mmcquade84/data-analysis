# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Generate simulated market data
np.random.seed(42)
n_samples = 1000
market_data = pd.DataFrame({
    'GDP': np.random.normal(10, 2, n_samples),
    'Interest Rate': np.random.normal(5, 1, n_samples),
    'Inflation': np.random.normal(2, 0.5, n_samples),
    'Wealth Index': np.random.normal(100, 20, n_samples)
})

# Explore data
print(market_data.head())

# Visualize data
sns.pairplot(market_data)
plt.show()

# Prepare data for modeling
X = market_data.drop(['Wealth Index'], axis=1)
y = market_data['Wealth Index']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train linear regression model
lr = LinearRegression()
lr.fit(X_train, y_train)

# Make predictions on test set
y_pred = lr.predict(X_test)

# Evaluate model performance
mse = mean_squared_error(y_test, y_pred)
print('Mean Squared Error:', mse)
