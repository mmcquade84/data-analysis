# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import yfinance as yf
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load market data from Yahoo Finance
tickers = ['SPY', 'QQQ', 'DIA']
market_data = pd.DataFrame()
for ticker in tickers:
    data = yf.download(ticker, period='max')
    market_data[ticker] = data['Close']
market_data = market_data.dropna()

# Explore data
print(market_data.head())

# Visualize data
sns.pairplot(market_data)
plt.show()

# Prepare data for modeling
X = market_data.drop(['SPY'], axis=1)
y = market_data['SPY']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train linear regression model
lr = LinearRegression()
lr.fit(X_train, y_train)

# Make predictions on test set
y_pred = lr.predict(X_test)

# Evaluate model performance
mse = mean_squared_error(y_test, y_pred)
print('Mean Squared Error:', mse)
